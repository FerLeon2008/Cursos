@charset "UTF-8";
.nav {
  background-color: steelblue;
}

* {
  margin: 0;
  box-sizing: border-box;
}

body {
  font-family: "Arial";
}

.hero__container {
  height: calc(100vh - 70px);
  background-image: linear-gradient(rgba(0, 0, 0, 0.7098039216), rgba(0, 0, 0, 0.7254901961));
  display: flex;
  align-items: center;
  justify-content: center;
}
.hero__texts {
  color: #fff;
}
.hero__tittle {
  font-size: 3rem;
}

.circle {
  width: 100px;
  height: 100px;
  background-color: #000;
  border-radius: 50%;
  animation-duration: 1s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

.circle-1 {
  animation-name: animacion1;
}
@keyframes animacion1 {
  100% {
    transform: translate(50%);
  }
}

.circle-2 {
  animation-name: animacion2;
}
@keyframes animacion2 {
  100% {
    transform: translate(100%);
  }
}

.circle-3 {
  animation-name: animacion3;
}
@keyframes animacion3 {
  100% {
    transform: translate(150%);
  }
}

.circle-4 {
  animation-name: animacion4;
}
@keyframes animacion4 {
  100% {
    transform: translate(200%);
  }
}

.circle-5 {
  animation-name: animacion5;
  animation-direction: alternate-reverse;
}
@keyframes animacion5 {
  100% {
    transform: translate(250%);
  }
}

h2 {
  color: crimson;
}

p {
  color: green;
}

/*Nesting
en css para decidir que un elemento que contiene a otro tenga un template es

.nav ul li a{
    ...propiedades...
}

Pero en sass lo podemos anidar de forma sencilla


.nav{
    ul{
        color: #000;

        li{
            color: #fff;

            a{
                color: blueviolet;
            }
        }
    }
}
Esto facilita escribir c칩digo css, haciendolo m치s r치pido y sencillo, aunque esto es una mala pr치ctica :(
Pero podemos usar el anidamiento
*/
.nav__container {
  width: 90%;
  margin: 0 auto;
  height: 70px;
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  gap: 1em;
}
.nav__item {
  color: #fff;
  text-decoration: none;
  /*Tambien se puede usar para el cambio de estado de un objeto:
      &:hover{
          color: #000;
      }
  */
}
.nav__item--activate {
  text-decoration: underline;
}
@media (min-width: 764px) {
  .nav__container {
    justify-content: flex-end;
  }
}

:root {
  --primary: yellow;
}

/*# sourceMappingURL=style.css.map */
